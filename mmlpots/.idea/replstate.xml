<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1410649494286">{:repl-history {:ide [], :local [&quot;(gpx-xml)&quot; &quot;(parse-gpx \&quot;test.gpx\&quot;)&quot; &quot;(def x (parse-gpx \&quot;test.gpx\&quot;))&quot; &quot;(enlive/select [:trkpt])&quot; &quot;(enlive/select x \n               [:trkpt])&quot; &quot;() (enlive/select x \n               [:trkpt])&quot; &quot;(first (enlive/select x [:trkpt]))&quot; &quot;(def trkpt (first (enlive/select x [:trkpt])))&quot; &quot;(enlive/select trkpt [(attr? :lat)])&quot; &quot;(enlive/select trkpt [(enlive/attr? :lat)])&quot; &quot;(enlive/select trkpt [:attr :lat])&quot; &quot;(enlive/select trkpt [\n                       :lat])&quot; &quot;(enlive/select trkpt [(enlive/attr-name? :lat)])&quot; &quot;(enlive/select trkpt [:trkpt (enlive/attr-name? :lat)])&quot; &quot;(enlive/select trkpt [:trkpt (enlive/attr\n                               ? :lat)])&quot; &quot;(enlive/select trkpt [:trkpt (enlive/attr? :lat)])&quot; &quot;(enlive/select trkpt [\n                       (enlive/attr? :lat)])&quot; &quot;(enlive/select (first trkpt) [\n                       (enlive/attr? :lat)])&quot; &quot;(enlive/select (first trkpt) [(enlive/attr? :lat)])&quot; &quot;x&quot; &quot;(first x)&quot; &quot;(def pt (first x))&quot; &quot;(comp :attrs )&quot; &quot;(def pts (enlive/select x track-points))&quot; &quot;(def pts (enlive/select x [:trkpt]))&quot; &quot;pts&quot; &quot;(def pt (first pts))&quot; &quot;pt&quot; &quot;((comp :attrs :lat) pt)&quot; &quot;(:attrs pt)&quot; &quot;(:lat (:attrs pt))&quot; &quot;(enlive/select (pt) [:ele])&quot; &quot;(enlive/select (pt) [:ele.content])&quot; &quot;(enlive/select (pt) [:ele] enlive/content)&quot; &quot;(enlive/select (pt) [:ele enlive/content])\n&quot; &quot;(pt)&quot; &quot;(parition 2 1 (pts))&quot; &quot;(partition 2 1 (pts))&quot; &quot;(as-array (pts))&quot; &quot;(diff-array\n  )&quot; &quot;(diff-array\n  2 3)&quot; &quot;(use mmlpots.core)&quot; &quot;(use '\n         mmlpots.core)&quot; &quot;(pts)&quot; &quot;(diff-array (pts))&quot; &quot;(transpose (diff-array (pts)))&quot; &quot;(-&gt; (pts) diff-array transpose)&quot; &quot;(def a (-&gt; (pts) diff-array transpose))&quot; &quot;(into-array (first a))&quot; &quot;(first a)&quot; &quot;(solve)&quot;], :remote []}}</component>
</project>

